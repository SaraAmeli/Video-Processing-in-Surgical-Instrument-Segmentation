# -*- coding: utf-8 -*-
"""Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sezBagBuqXsXIM0YgmqfkVHJ9VhdqjqT
"""

from google.colab import drive
drive.mount('/mnt/gdrive')

from google.colab import drive
drive.mount('/content/drive')

import torch

device = torch.device("cuda" if torch.cuda.is_available() else "cpu")
print("‚ö° Using device:", device)

import os
import cv2
import torch
import numpy as np
import matplotlib.pyplot as plt
from torchvision import transforms
from PIL import Image

# --- Paths ---
video_id = "video_41"
frame_name = "000000090.jpg"  # üîÅ change to any frame name you want to visualize "000000005.jpg", "000000010.jpg"

frame_path = f"/content/drive/MyDrive/Image_Vision/test_frames/{video_id}/{frame_name}"
mask_path = f"/content/drive/MyDrive/Image_Vision/test_predictions_rgb/{video_id}/{frame_name.replace('.jpg', '.png')}"

# --- Load and prepare frame ---
frame = cv2.imread(frame_path)
frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
frame = cv2.resize(frame, (384, 384))

# --- Load predicted mask (RGB preview already saved as PNG) ---
mask = Image.open(mask_path)
mask = mask.resize((384, 384))
mask = np.array(mask)

# --- Show side-by-side ---
plt.figure(figsize=(10, 5))

plt.subplot(1, 2, 1)
plt.imshow(frame)
plt.title("Input Frame")
plt.axis("off")

plt.subplot(1, 2, 2)
plt.imshow(mask)
plt.title("Predicted Segmentation")
plt.axis("off")

plt.tight_layout()
plt.show()